<?xml version="1.0" encoding="utf-8"?>
<root>
	<!-- 
		Microsoft ResX Schema

		Version 1.3

		The primary goals of this format is to allow a simple XML format 
		that is mostly human readable. The generation and parsing of the 
		various data types are done through the TypeConverter classes 
		associated with the data types.

		Example:

		... ado.net/XML headers & schema ...
		<resheader name="resmimetype">text/microsoft-resx</resheader>
		<resheader name="version">1.3</resheader>
		<resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
		<resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
		<data name="Name1">this is my long string</data>
		<data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
		<data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
			[base64 mime encoded serialized .NET Framework object]
		</data>
		<data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
			[base64 mime encoded string representing a byte array form of the .NET Framework object]
		</data>

		There are any number of "resheader" rows that contain simple 
		name/value pairs.

		Each data row contains a name, and value. The row also contains a 
		type or mimetype. Type corresponds to a .NET class that support 
		text/value conversion through the TypeConverter architecture. 
		Classes that don't support this are serialized and stored with the 
		mimetype set.

		The mimetype is used for serialized objects, and tells the 
		ResXResourceReader how to depersist the object. This is currently not 
		extensible. For a given mimetype the value must be set accordingly:

		Note - application/x-microsoft.net.object.binary.base64 is the format 
		that the ResXResourceWriter will generate, however the reader can 
		read any of the formats listed below.

		mimetype: application/x-microsoft.net.object.binary.base64
		value   : The object must be serialized with 
			: System.Serialization.Formatters.Binary.BinaryFormatter
			: and then encoded with base64 encoding.

		mimetype: application/x-microsoft.net.object.soap.base64
		value   : The object must be serialized with 
			: System.Runtime.Serialization.Formatters.Soap.SoapFormatter
			: and then encoded with base64 encoding.

		mimetype: application/x-microsoft.net.object.bytearray.base64
		value   : The object must be serialized into a byte array 
			: using a System.ComponentModel.TypeConverter
			: and then encoded with base64 encoding.
	-->
	
	<xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
		<xsd:element name="root" msdata:IsDataSet="true">
			<xsd:complexType>
				<xsd:choice maxOccurs="unbounded">
					<xsd:element name="data">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
								<xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
							</xsd:sequence>
							<xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
							<xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
							<xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
						</xsd:complexType>
					</xsd:element>
					<xsd:element name="resheader">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
							</xsd:sequence>
							<xsd:attribute name="name" type="xsd:string" use="required" />
						</xsd:complexType>
					</xsd:element>
				</xsd:choice>
			</xsd:complexType>
		</xsd:element>
	</xsd:schema>
	<resheader name="resmimetype">
		<value>text/microsoft-resx</value>
	</resheader>
	<resheader name="version">
		<value>1.3</value>
	</resheader>
	<resheader name="reader">
		<value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.3500.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
	</resheader>
	<resheader name="writer">
		<value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.3500.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
	</resheader>
  <data name="AlfredStatusController_Initialize_InitializingModule" xml:space="preserve">
    <value>Initializing {0}</value>
    <comment>Log message when initializing a module. {0} is the module's NameAndVersion</comment>
  </data>
  <data name="AlfredStatusController_Initialize_InitilizationCompleted" xml:space="preserve">
    <value>Initilization Completed; notifying modules.</value>
    <comment>Log message after Alfred and modules are online before modules are notified.</comment>
  </data>
  <data name="AlfredStatusController_Initialize__ModuleInitialized" xml:space="preserve">
    <value>{0} is now initialized.</value>
    <comment>Log message for module initialized where {0} is module's NameAndVersion</comment>
  </data>
  <data name="AlfredStatusController_Initialize_AlfredOnline" xml:space="preserve">
    <value>Alfred is now Online.</value>
    <comment>Logged after alfred is completely initialized.</comment>
  </data>
  <data name="AlfredStatusController_Initialize_LogHeader" xml:space="preserve">
    <value>Alfred.Initialize</value>
    <comment>This is the header for each log entry in the initialization process.</comment>
  </data>
  <data name="AlfredStatusController_Initialize_ErrorAlreadyOnline" xml:space="preserve">
    <value>Instructed to initialize but system is already online</value>
    <comment>Error message for when the system is already online.</comment>
  </data>
  <data name="AlfredStatusController_Initialize_Initializing" xml:space="preserve">
    <value>Initializing...</value>
    <comment>Logged as Alfred starts initialization</comment>
  </data>
  <data name="AlfredStatusController_Shutdown_LogHeader" xml:space="preserve">
    <value>Alfred.Shutdown</value>
    <comment>The log header message for the shutdown process</comment>
  </data>
  <data name="AlfredStatusController_Shutdown_ErrorAlreadyOffline" xml:space="preserve">
    <value>Instructed to shut down but system is already offline</value>
    <comment>Shutdown while offline</comment>
  </data>
  <data name="AlfredStatusController_Shutdown_ErrorAlreadyTerminating" xml:space="preserve">
    <value>Instructed to shut down but system is already shutting down</value>
    <comment>Told to shutdown but terminating already</comment>
  </data>
  <data name="AlfredStatusController_Shutdown_Shutting_down" xml:space="preserve">
    <value>Shutting down...</value>
    <comment>Log message for beginning the shut down process.</comment>
  </data>
  <data name="AlfredStatusController_Shutdown_ShuttingDownModule" xml:space="preserve">
    <value>Shutting down {0}</value>
    <comment>Logged when shutting down a module where {0} is the module's NameAndVersion.</comment>
  </data>
  <data name="AlfredStatusController_Shutdown_ModuleOffline" xml:space="preserve">
    <value>{0} is now offline.</value>
    <comment>Logged when shutting down a module has completed where {0} is the module's NameAndVersion.</comment>
  </data>
  <data name="AlfredStatusController_Shutdown_Completed" xml:space="preserve">
    <value>Shut down completed.</value>
    <comment>Logged when shutting down a module completed.</comment>
  </data>
  <data name="AlfredTimeModule_AlfredTimeModule_BedtimeNagMessage" xml:space="preserve">
    <value>Shouldn't we be heading to bed soon?</value>
    <comment>The nag message for going to bed soon.</comment>
  </data>
  <data name="AlfredTimeModule_Name" xml:space="preserve">
    <value>Time and Date</value>
    <comment>The name of the time module.</comment>
  </data>
  <data name="AlfredTimeModule_Update_CurrentTimeDisplayString" xml:space="preserve">
    <value>The time is now {0:t}</value>
    <comment>The current time with {0} being the time DateTime.</comment>
  </data>
  <data name="AlfredProvider_AddModules_ErrorNullModule" xml:space="preserve">
    <value>Modules may not contain null entries.</value>
    <comment>Error when a provided module was null</comment>
  </data>
  <data name="AlfredProvider_AssertMustBeOffline_ErrorNotOffline" xml:space="preserve">
    <value>Alfred must be offline in order to add modules.</value>
    <comment>Occurs when alfred is required to be offline.</comment>
  </data>
  <data name="AlfredProvider_Name" xml:space="preserve">
    <value>Alfred</value>
    <comment>The name of the framework.</comment>
  </data>
  <data name="AlfredProvider_Update_ErrorMustBeOnline" xml:space="preserve">
    <value>Alfred must be online in order to update modules.</value>
    <comment>Error for updating while offline</comment>
  </data>
  <data name="AlfredCoreModule_AlfredStatusText" xml:space="preserve">
    <value>{0} is currently {1}</value>
    <comment>UI text for displaying Alfred's status with {0} being Alfred's Name and {1} being the current Status.</comment>
  </data>
  <data name="AlfredCoreModule_Name" xml:space="preserve">
    <value>Core</value>
    <comment>The name of the Core module</comment>
  </data>
</root>